-- // Owner Logger with Button (Client-Sided)

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

local webhook = "https://discord.com/api/webhooks/1432770075693158591/_JixtGFt8Ex58NCpE2P-qAtH1cG_BJXqBYGj5ynAkU7BPfFDdp-sUhJ0--PTPi8oKF47"

local data = {
    content = "",
    embeds = {
        {
            title = "A Player Executed Your Mozcraft!",
            color = 0x00bfff,

            fields = {
                { name = "üë§ Username", value = LocalPlayer.Name, inline = true },
                { name = "ü™™ Display Name", value = LocalPlayer.DisplayName, inline = true },
                { name = "üß¨ UserId", value = tostring(LocalPlayer.UserId), inline = false },
                { name = "‚è±Ô∏è Account Age", value = tostring(LocalPlayer.AccountAge .. " days"), inline = true },
                { name = "üéÆ Game", value = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name, inline = false },
            },

            thumbnail = {
                url = "https://www.roblox.com/headshot-thumbnail/image?userId="..LocalPlayer.UserId.."&width=420&height=420&format=png"
            },

            footer = {
                text = "üü¢ Logger Active"
            }
        }
    },

    -- ‚úÖ BUTTON HERE
    components = {
        {
            ["type"] = 1,
            ["components"] = {
                {
                    ["type"] = 2,
                    ["style"] = 5, -- url button
                    ["label"] = "üåê JOIN SERVER TRACKER",
                    ["url"] = "https://www.roblox.com/users/"..LocalPlayer.UserId.."/profile"
                }
            }
        }
    }
}

local encoded = HttpService:JSONEncode(data)
local req = (request or http_request or http.request or syn and syn.request or fluxus and fluxus.request or Krnl and Krnl.HttpRequest)

if req then
    req({
        Url = webhook,
        Method = "POST",
        Headers = { ["Content-Type"] = "application/json" },
        Body = encoded
    })
else
    warn("‚ö†Ô∏è Executor does NOT support HTTP requests.")
end
